<%  
# this partial renders a tabnav, you can call it in your views with:
#   <%= tabnav :main % > (just the tabnav) 
# or, if you want a boxed tabnav:
#   <% tabnav :main do % >
#     your html here
#   <% end % >
# (remove the space between % and >, we don't want to mess up your brand new tabnav :-))
#
# you can pass render_tabnav a few options:
#   :generate_css => true|false #=> generates a default inline css for the tabnav, defaults to false
#   :html => aHash #=> sets html options for the tabnav's div (es :html => {:class=> 'myCssClass', :id=>'myCssId'}) 
#     
render_tabnav :main, 
              :generate_css => false do
    
  # this generates a tab for every controller in your app
  # you'll probably want to delete this and
  # add tabs one by one as shown below
  #controller_names.each do |name|
    #add_tab do |t|
      #t.named name.camelize
      #t.titled "Go to #{name.camelize}"
      #t.links_to :controller => name
    #end
  #end
  #
  add_tab do |t|
    t.named 'Home'
    t.titled 'Home'
    t.links_to home_path("about")
    t.highlights_on :controller => "home"
  end

  add_tab do |t|
    t.named 'Predictions'
    t.titled 'Your predictions of the championship'
    t.links_to prediction_menu_link
    t.highlights_on :controller => "predictions"
  end

  if before_contest_participation_ends
    add_tab do |t|
      t.named 'Invitations'
      t.titled 'Your received contest invitations'
      t.links_to pending_invitations_path("championship")
      t.highlights_on :controller => "invitations", :action => "pending"
      t.highlights_on :controller => "invitations", :action => "accepted"
    end
  end

  add_tab do |t|
    t.named 'Contests'
    t.titled 'All contests you have created or accepted invitations for'
    t.links_to contests_path("championship", "all")
    t.highlights_on :controller => "contests", :action => "index"
    if before_contest_participation_ends
      t.highlights_on :controller => "contests", :action => "new"
      t.highlights_on :controller => "contests", :action => "create"
    end
  end

  selected = selected_contest
  if selected
    add_tab do |t|
      t.named selected.name
      t.titled selected.name
      t.links_to contest_instance_menu_link(selected)
      t.highlights_on :controller => "contests", :action => "show"
      t.highlights_on :controller => "contests", :action => "upcoming_events"
      t.highlights_on :controller => "contests", :action => "latest_results"
      t.highlights_on :controller => "score_tables"
      t.highlights_on :controller => "participants"
      if before_contest_participation_ends
        t.highlights_on :controller => "contests", :action => "edit"
        t.highlights_on :controller => "contests", :action => "update"
        t.highlights_on :controller => "invitations", :action => "new"        
      end
      t.highlights_on :controller => "invitations", :action => "index", :role => "admin"
    end
  end

  #add_tab do |t|
    #t.named 'Results'
    #t.titled 'Results'
    #t.links_to new_prediction_path("group", "B")
    #t.highlights_on :controller => "predictable/championship/results"
  #end
  #  
  # you can use restful routes with:
  #
  #add_tab do |t|
  #  t.named 'Users'
  #  t.links_to hash_for_users_path
  #end
  #
  #add_tab do |t|
  #  t.named 'Customers'
  #  t.links_to :controller => 'customers'
  #end
  #  
  # # A tab can be initialized with a Hash like this:
  # 
  # add_tab :name => 'welcome', :link => {:controller=>'welcome'}
  #
  # # You can have a dynamic name or link 
  # # (this partial is evaluated in the page context, so it sees every helper or instance variable)
  #  
  # add_tab do |t|
  #   t.named "#{current_user} details"
  #   t.links_to :controller => 'users', :action => 'show', :id => current_user.id
  # end
  #
  # # You can have an image inside 
  #
  # add_tab do |t|
  #   t.named image_tag('test')
  #   t.links_to :controller => 'users', :action => 'show', :id => current_user.id
  # end
end 
%>